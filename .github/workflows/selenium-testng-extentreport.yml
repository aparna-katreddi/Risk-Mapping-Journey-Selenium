name: Selenium Tests

on:
  # Trigger workflow manually via GitHub UI
  workflow_dispatch:
    inputs:
      browser:
        description: 'Select the browser'
        required: true
        type: choice
        options:
          - 'chrome'
          - 'firefox'
        default: 'chrome'

      env:
        description: 'Select the environment'
        required: true
        type: choice
        options:
          - 'qa'
          - 'stage'
          - 'prod'
        default: 'qa'

      groups:
        description: 'Select the test group'
        required: true
        type: choice
        options:
          - 'smoke'
          - 'regression'
        default: 'regression'
      suite:
        description: 'Select the TestNG suite'
        required: true
        type: choice
        options:
          - 'testng-sequence.xml'
          - 'testng.xml'
        default: 'testng-sequence.xml'


jobs:
  selenium-tests:
    runs-on: ubuntu-latest  # Can be 'windows-latest' or 'macos-latest' if needed

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java (choose the version you need)
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

    

      # Step 5: Run tests with parameters passed by the user
      - name: Run Selenium tests
        run: mvn clean test -Dbrowser=${{ github.event.inputs.browser }} -Denv=${{ github.event.inputs.env }} -Dgroups=${{ github.event.inputs.groups }} -Dtestng.suite=src/test/resources/${{ github.event.inputs.suite }}
        env:
          CI: true

      # Step 6: Upload Test Results (optional)
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

      # Step 7: Deploy to GitHub Pages (publish to gh-pages branch)
      - name: Deploy to GitHub Pages
        if: success()  # Only deploy if tests pass
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/surefire-reports  # The directory to publish
          user_name: 'GitHub Actions'
          user_email: 'github-actions@github.com'

      # Step 8: Upload Extent Report (or any other reports you have)
      - name: Upload Extent Reports to GitHub Pages
        if: success()
        run: |
          # Move your Extent report (or generated HTML files) to the gh-pages directory
          mv ./target/extent-reports ./gh-pages/
          
          # Create an empty commit if no changes have been made
          git add .
          git commit -m "Update test results" || echo "No changes to commit"
          
          # Push the changes to the gh-pages branch
          git push origin gh-pages
